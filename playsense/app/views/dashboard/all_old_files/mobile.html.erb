
<div data-role="page">

	<div data-role="header">
		<h1>Cricket Sense2</h1>
	</div>

	<div role="main" class="ui-content">


		<div class="ui-corner-all custom-corners">
		  <div class="ui-bar ui-bar-a">
		    <h3>Heading</h3>

		  </div>
		  <div class="ui-body ui-body-a">
		    		    <div id="myconsole"></div>


			     <fieldset class="ui-grid-a">
			    <div class="ui-block-a"><a href="#" class="ui-btn ui-btn-inline start_stop" val="start">Start</a></div>
			    <div class="ui-block-b"><a href="#" class="ui-btn ui-btn-inline start_stop" val="stop">Stop</a></div>
			</fieldset>

		  </div>
		</div>


		<br>

			
		<div class="ui-corner-all custom-corners">
		  <div class="ui-bar ui-bar-a">
		    <h3>Accelerometer</h3>
		  </div>
		  <div class="ui-body ui-body-a">
		    
			<div class="ui-grid-b">
			    <div class="ui-block-a">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		X: <span id="accel_x">X</span>			
			    	</div>
			    </div>

			    <div class="ui-block-b">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		Y: <span id="accel_y">Y</span>			
			    	</div>
			    </div>

			    <div class="ui-block-c">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		Z: <span id="accel_z">Z</span>			
			    	</div>
			    </div>			    
			</div>

		  </div>
		</div>


		<div class="ui-corner-all custom-corners">
		  <div class="ui-bar ui-bar-a">
		    <h3>Gyroscope</h3>
		  </div>
		  <div class="ui-body ui-body-a">
		    
			<div class="ui-grid-b">
			    <div class="ui-block-a">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		X: <span id="gyro_x">X</span>			
			    	</div>
			    </div>

			    <div class="ui-block-b">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		Y: <span id="gyro_y">Y</span>			
			    	</div>
			    </div>

			    <div class="ui-block-c">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		Z: <span id="gyro_z">Z</span>			
			    	</div>
			    </div>			    
			</div>

		  </div>
		</div>

		<div class="ui-corner-all custom-corners">
		  <div class="ui-bar ui-bar-a">
		    <h3>Orientation</h3>
		  </div>
		  <div class="ui-body ui-body-a">
		    
			<div class="ui-grid-b">
			    <div class="ui-block-a">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		A: <span id="mag_x">X</span>			
			    	</div>
			    </div>

			    <div class="ui-block-b">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		B: <span id="mag_y">Y</span>			
			    	</div>
			    </div>

			    <div class="ui-block-c">
			    	<div class="ui-bar ui-bar-a" style="height:60px">
			    		G: <span id="mag_z">Z</span>			
			    	</div>
			    </div>			    
			</div>

		  </div>
		</div>



	</div><!-- /content -->


</div><!-- /page -->


<script>

	var global_start = "yes";
	var global_device_data = "a";

	var gdevicedata_array = [];
	var gdevicedata_orientation_array = [];


	// set socket handlers

	setInterval(function(){
			var event_data = gdevicedata_array.pop();
			var h = {};
			h["acceleration"] = event_data.acceleration;
			h["rotationRate"] = event_data.rotationRate;

			console.log("sending global_device_data to nodejs = ", h);			
			global_socket.emit('device_motion_event', { "values": h });
		}, 
		100
	);


	setInterval(function(){
			var event_data = gdevicedata_orientation_array.pop();
			var h = {};
			h["alpha"] = event_data.alpha;
			h["beta"] = event_data.beta;
			h["gamma"] = event_data.gamma;

			console.log("sending global_device_data to nodejs = ", h);			
			global_socket.emit('device_orientation_event', { "values": h });
		}, 
		100
	);

 	$(document).ready(function() {

    	init();

		$(".start_stop").click(function() {
			var val = $(this).attr("val");
			if(val === "start"){
				global_start = "yes";
			}else{
				global_start = "no";				
			}

    	});

    });   

   
    function init() {
      if ((window.DeviceMotionEvent) || ('listenForDeviceMovement' in window)) {
        window.addEventListener('devicemotion', deviceMotionHandler, false);
      } 

      if ((window.DeviceOrientationEvent) || ('listenForDeviceMovement' in window)) {
        window.addEventListener('deviceorientation', deviceOrientationHandler, false);
      } 

    }
    


    function deviceOrientationHandler(eventData) {

    	gdevicedata_orientation_array.push(eventData);

	      $("#mag_x").html(eventData.alpha);
	      $("#mag_y").html(eventData.beta);
	      $("#mag_z").html(eventData.gamma);

    }



    function deviceMotionHandler(eventData) {

    	global_device_data = eventData;

    	gdevicedata_array.push(eventData);

      	if(global_start != "yes"){
      		return;
      	}


	    var info, xyz = "[X, Y, Z]";

      // acceeleration
      var acceleration = eventData.acceleration;
      var accel_x = round(acceleration.x);
      var accel_y = round(acceleration.y);
      var accel_z = round(acceleration.z);

      $("#accel_x").html(accel_x);
      $("#accel_y").html(accel_y);
      $("#accel_z").html(accel_z);


      // Rotation
      var rotation = eventData.rotationRate;
      var rot_x = round(rotation.alpha);
      var rot_y = round(rotation.beta);
      var rot_z = round(rotation.gamma);

      $("#gyro_x").html(rot_x);
      $("#gyro_y").html(rot_y);
      $("#gyro_z").html(rot_z);
    }


    function round(val) {
      var amt = 10;
      return Math.round(val * amt) /  amt;
    }



</script>






